{"version":3,"sources":["devices/BaseDevice.tsx","devices/Default.tsx","devices/graphics/Lamp.tsx","devices/Light.tsx","devices/graphics/WaterTank.tsx","devices/WaterTank.tsx","devices/Device.tsx","App.tsx","hooks/useListPoll.ts","hooks/useSendMessage.ts","reportWebVitals.ts","index.tsx"],"names":["text","body","header","timeSinceLastUpdate","title","actions","sendMessage","id","hasExpired","shiftTo","get","className","map","a","type","onClick","label","humanizeDuration","valueOf","round","payload","message","Object","entries","k","v","BaseDevice","width","height","fill","viewBox","xmlns","d","lightState","power","Lamp","waterHeight","waterLevel","x","y","WaterTank","water_level","currentDateTime","Interval","fromDateTimes","DateTime","fromISO","last_updated","toDuration","last_payload","template","Light","Default","App","items","intervalRef","useRef","undefined","useState","state","setState","useEffect","current","setInterval","fetch","then","response","json","clearInterval","useListPoll","useCallback","action","method","headers","JSON","stringify","utc","item","Device","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17944310.chunk.js","sourcesContent":["import React from \"react\";\nimport { Duration } from \"luxon\";\nimport humanizeDuration from \"humanize-duration\";\nimport { Action } from \"../types\";\nimport \"./baseDevice.scss\";\n\nconst EXPIRE_TIME = 10;\n\ninterface Props {\n  title: string;\n  text?: string;\n  body?: React.ReactNode;\n  header?: React.ReactNode;\n  timeSinceLastUpdate: Duration;\n  id: string;\n  actions: readonly Action[];\n  sendMessage: (id: string, action: Action) => void;\n}\n\nexport default ({\n  text,\n  body,\n  header,\n  timeSinceLastUpdate,\n  title,\n  actions,\n  sendMessage,\n  id,\n}: Props) => {\n  const hasExpired =\n    timeSinceLastUpdate.shiftTo(\"seconds\").get(\"seconds\") > EXPIRE_TIME;\n\n  return (\n    <div className={`col base-device ${hasExpired ? \"disconnected\" : \"\"}`}>\n      <div className=\"card shadow-sm\">\n        {header}\n        <div className=\"card-body\">\n          <h5>{title}</h5>\n          {text && <p className=\"card-text\">{text}</p>}\n          {body}\n          <div className=\"d-flex justify-content-between align-items-center\">\n            <div className=\"btn-group\">\n              {actions.map((a) => (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-sm btn-outline-secondary\"\n                  onClick={() => sendMessage(id, a)}\n                >\n                  {a.label}\n                </button>\n              ))}\n            </div>\n            <small className=\"text-muted\">\n              Last updated{\" \"}\n              {humanizeDuration(timeSinceLastUpdate.valueOf(), { round: true })}{\" \"}\n              ago\n            </small>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Duration } from \"luxon\";\nimport { Message, UnknownPayload, Action } from \"../types\";\nimport BaseDevice from \"./BaseDevice\";\n\ninterface Props {\n  payload: UnknownPayload;\n  message: Message;\n  timeSinceLastUpdate: Duration;\n  sendMessage: (id: string, action: Action) => void;\n}\n\nexport default ({\n  payload,\n  message,\n  timeSinceLastUpdate,\n  sendMessage,\n}: Props) => {\n  const body = (\n    <ul>\n      {Object.entries(payload).map(([k, v]) => (\n        <li key={k}>\n          {k}: {v}\n        </li>\n      ))}\n    </ul>\n  );\n  return (\n    <BaseDevice\n      title={message.id}\n      body={body}\n      timeSinceLastUpdate={timeSinceLastUpdate}\n      actions={payload.actions}\n      sendMessage={sendMessage}\n      id={message.id}\n    />\n  );\n};\n","import React from \"react\";\n\ninterface Props {\n  width: number;\n  height: number;\n  fill: string;\n  className?: string;\n}\n\n//https://www.flaticon.com/authors/pixel-perfect\nexport default ({ width, height, fill, className }: Props) => (\n  <svg\n    id=\"bold\"\n    enable-background=\"new 0 0 24 24\"\n    height={height}\n    viewBox=\"0 0 24 24\"\n    width={width}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={className}\n  >\n    <path\n      fill={fill}\n      d=\"m12 3.457c-.414 0-.75-.336-.75-.75v-1.957c0-.414.336-.75.75-.75s.75.336.75.75v1.957c0 .414-.336.75-.75.75z\"\n    />\n    <path\n      fill={fill}\n      d=\"m18.571 6.179c-.192 0-.384-.073-.53-.22-.293-.293-.293-.768 0-1.061l1.384-1.384c.293-.293.768-.293 1.061 0s.293.768 0 1.061l-1.384 1.384c-.147.146-.339.22-.531.22z\"\n    />\n    <path\n      fill={fill}\n      d=\"m23.25 12.75h-1.957c-.414 0-.75-.336-.75-.75s.336-.75.75-.75h1.957c.414 0 .75.336.75.75s-.336.75-.75.75z\"\n    />\n    <path\n      fill={fill}\n      d=\"m19.955 20.705c-.192 0-.384-.073-.53-.22l-1.384-1.384c-.293-.293-.293-.768 0-1.061s.768-.293 1.061 0l1.384 1.384c.293.293.293.768 0 1.061-.147.147-.339.22-.531.22z\"\n    />\n    <path\n      fill={fill}\n      d=\"m4.045 20.705c-.192 0-.384-.073-.53-.22-.293-.293-.293-.768 0-1.061l1.384-1.384c.293-.293.768-.293 1.061 0s.293.768 0 1.061l-1.384 1.384c-.147.147-.339.22-.531.22z\"\n    />\n    <path\n      fill={fill}\n      d=\"m2.707 12.75h-1.957c-.414 0-.75-.336-.75-.75s.336-.75.75-.75h1.957c.414 0 .75.336.75.75s-.336.75-.75.75z\"\n    />\n    <path\n      fill={fill}\n      d=\"m5.429 6.179c-.192 0-.384-.073-.53-.22l-1.384-1.384c-.293-.293-.293-.768 0-1.061s.768-.293 1.061 0l1.384 1.384c.293.293.293.768 0 1.061-.148.146-.339.22-.531.22z\"\n    />\n    <path\n      fill={fill}\n      d=\"m15 21v1.25c0 .96-.79 1.75-1.75 1.75h-2.5c-.84 0-1.75-.64-1.75-2.04v-.96z\"\n    />\n    <path\n      fill={fill}\n      d=\"m16.41 6.56c-1.64-1.33-3.8-1.85-5.91-1.4-2.65.55-4.8 2.71-5.35 5.36-.56 2.72.46 5.42 2.64 7.07.59.44 1 1.12 1.14 1.91v.01c.02-.01.05-.01.07-.01h6c.02 0 .03 0 .05.01v-.01c.14-.76.59-1.46 1.28-2 1.69-1.34 2.67-3.34 2.67-5.5 0-2.12-.94-4.1-2.59-5.44zm-.66 5.94c-.41 0-.75-.34-.75-.75 0-1.52-1.23-2.75-2.75-2.75-.41 0-.75-.34-.75-.75s.34-.75.75-.75c2.34 0 4.25 1.91 4.25 4.25 0 .41-.34.75-.75.75z\"\n    />\n    <path fill={fill} d=\"m8.93 19.5h.07c-.02 0-.05 0-.07.01z\" />\n    <path fill={fill} d=\"m15.05 19.5v.01c-.02-.01-.03-.01-.05-.01z\" />\n  </svg>\n);\n","import React from \"react\";\nimport { Duration } from \"luxon\";\nimport { Message, LightPayload, Action } from \"../types\";\nimport BaseDevice from \"./BaseDevice\";\nimport Lamp from \"./graphics/Lamp\";\n\ninterface Props {\n  payload: LightPayload;\n  message: Message;\n  timeSinceLastUpdate: Duration;\n  sendMessage: (id: string, action: Action) => void;\n}\n\nexport default ({\n  payload,\n  message,\n  timeSinceLastUpdate,\n  sendMessage,\n}: Props) => {\n  const lightState = `Light is ${payload.power ? \"On\" : \"Off\"}`;\n  return (\n    <BaseDevice\n      header={\n        <Lamp\n          width={320}\n          height={320}\n          className=\"bd-placeholder-img card-img-top lamp\"\n          fill={payload.power ? \"red\" : \"black\"}\n        />\n      }\n      title={message.id}\n      text={lightState}\n      timeSinceLastUpdate={timeSinceLastUpdate}\n      actions={payload.actions}\n      sendMessage={sendMessage}\n      id={message.id}\n    />\n  );\n};\n","import React from \"react\";\n\ninterface Props {\n  width: number;\n  height: number;\n  className?: string;\n  waterLevel: number;\n}\n\nconst WATER_Y_OFFSET = 30;\nconst WATER_MAX_HEIGHT = 86;\n\n//https://www.flaticon.com/authors/good-ware\nexport default ({ width, height, className, waterLevel }: Props) => {\n  const waterHeight = WATER_MAX_HEIGHT * (waterLevel / 100);\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width}\n      height={height}\n      viewBox=\"0 0 128 128\"\n      className={className}\n    >\n      <rect\n        width=\"72\"\n        height={waterHeight}\n        fill=\"blue\"\n        x=\"28\"\n        y={WATER_Y_OFFSET + (WATER_MAX_HEIGHT - waterHeight)}\n      ></rect>\n      <g>\n        <path d=\"M94.808,96.47a1.751,1.751,0,0,0,1.75-1.75v-7a1.75,1.75,0,0,0-3.5,0v7A1.75,1.75,0,0,0,94.808,96.47Z\" />\n        <path d=\"M121.5,113.75h-2.69V76a16.759,16.759,0,0,0-16.25-16.725V31.942h1.248a1.75,1.75,0,0,0,1.75-1.75v-6a1.751,1.751,0,0,0-1.75-1.75h-1.416A13.642,13.642,0,0,0,88.81,10.75H68.75V6.5A1.75,1.75,0,0,0,67,4.75H61A1.75,1.75,0,0,0,59.25,6.5v4.25H39.19A13.642,13.642,0,0,0,25.608,22.442H24.192a1.751,1.751,0,0,0-1.75,1.75v6a1.75,1.75,0,0,0,1.75,1.75H25.44V59.275A16.759,16.759,0,0,0,9.19,76v37.75H6.5a1.75,1.75,0,0,0-1.75,1.75v6a1.75,1.75,0,0,0,1.75,1.75h115a1.75,1.75,0,0,0,1.75-1.75v-6A1.75,1.75,0,0,0,121.5,113.75ZM115.31,76v37.75h-2.5V76a10.755,10.755,0,0,0-10.25-10.725v-2.5A13.256,13.256,0,0,1,115.31,76Zm-12.75,37.75V68.775A7.254,7.254,0,0,1,109.31,76v37.75Zm-3.5,0H73.75V31.942H99.06ZM27.215,28.442l-.025,0-.024,0H25.942v-2.5h76.116v2.5h-1.224l-.024,0-.025,0ZM70.25,60.378v5.979H57.75V60.378Zm-12.5-3.5V50.9h12.5v5.979Zm12.5,12.979v5.978H57.75V69.857Zm0,9.478v5.979H57.75V79.335Zm0,9.479v5.979H57.75V88.814Zm0-41.415H57.75V41.421h12.5ZM57.75,98.293h12.5v5.978H57.75Zm12.5-66.351v5.979H57.75V31.942Zm-12.5,75.829h12.5v5.979H57.75Zm5-99.521h2.5v2.5h-2.5Zm-23.56,6H88.81a10.167,10.167,0,0,1,10.033,8.192H29.157A10.167,10.167,0,0,1,39.19,14.25ZM54.25,31.942V113.75H28.94V31.942ZM18.69,113.75V76a7.254,7.254,0,0,1,6.75-7.225V113.75ZM12.69,76A13.256,13.256,0,0,1,25.44,62.775v2.5A10.755,10.755,0,0,0,15.19,76v37.75h-2.5Zm107.06,43.75H8.25v-2.5h111.5Z\" />\n      </g>\n    </svg>\n  );\n};\n","import React from \"react\";\nimport { Duration } from \"luxon\";\nimport { Message, WaterTankPayload, Action } from \"../types\";\nimport BaseDevice from \"./BaseDevice\";\nimport WaterTankSVG from \"./graphics/WaterTank\";\n\ninterface Props {\n  payload: WaterTankPayload;\n  message: Message;\n  timeSinceLastUpdate: Duration;\n  sendMessage: (id: string, action: Action) => void;\n}\n\nexport default ({\n  payload,\n  message,\n  timeSinceLastUpdate,\n  sendMessage,\n}: Props) => {\n  return (\n    <BaseDevice\n      header={\n        <WaterTankSVG\n          width={320}\n          height={320}\n          className=\"bd-placeholder-img card-img-top\"\n          waterLevel={payload.water_level}\n        />\n      }\n      title={message.id}\n      timeSinceLastUpdate={timeSinceLastUpdate}\n      actions={payload.actions}\n      sendMessage={sendMessage}\n      id={message.id}\n    />\n  );\n};\n","import React from \"react\";\nimport { DateTime, Interval } from \"luxon\";\nimport { LightPayload, WaterTankPayload, Message, Action } from \"../types\";\nimport Default from \"./Default\";\nimport Light from \"./Light\";\nimport WaterTank from \"./WaterTank\";\n\ninterface Props {\n  message: Message;\n  currentDateTime: DateTime;\n  sendMessage: (id: string, action: Action) => void;\n}\n\nexport default ({ message, currentDateTime, sendMessage }: Props) => {\n  const timeSinceLastUpdate = Interval.fromDateTimes(\n    DateTime.fromISO(message.last_updated),\n    currentDateTime\n  ).toDuration();\n  switch (message.last_payload.template) {\n    case \"light\":\n      return (\n        <Light\n          payload={message.last_payload as LightPayload}\n          message={message}\n          timeSinceLastUpdate={timeSinceLastUpdate}\n          sendMessage={sendMessage}\n        />\n      );\n    case \"water_tank\":\n      return (\n        <WaterTank\n          payload={message.last_payload as WaterTankPayload}\n          message={message}\n          timeSinceLastUpdate={timeSinceLastUpdate}\n          sendMessage={sendMessage}\n        />\n      );\n    default:\n      return (\n        <Default\n          payload={message.last_payload}\n          message={message}\n          timeSinceLastUpdate={timeSinceLastUpdate}\n          sendMessage={sendMessage}\n        />\n      );\n  }\n};\n","import React from \"react\";\nimport { useListPoll } from \"./hooks/useListPoll\";\nimport { useSendMessage } from \"./hooks/useSendMessage\";\nimport Device from \"./devices/Device\";\nimport { DateTime } from \"luxon\";\n\nfunction App() {\n  const items = useListPoll();\n  const sendMessage = useSendMessage();\n  const currentDateTime = DateTime.utc();\n  return (\n    <>\n      <header>\n        <div className=\"navbar navbar-dark bg-dark shadow-sm\">\n          <div className=\"container\">\n            <strong className=\"navbar-brand\">Dashboard</strong>\n          </div>\n        </div>\n      </header>\n      <main>\n        <div className=\"py-5 bg-light\">\n          <div className=\"container\">\n            <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3\">\n              {items.map((item) => (\n                <Device\n                  key={item.id}\n                  message={item}\n                  currentDateTime={currentDateTime}\n                  sendMessage={sendMessage}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import { useRef, useEffect, useState } from \"react\";\nimport { Message } from \"../types\";\n\nexport const useListPoll = () => {\n  const intervalRef = useRef<NodeJS.Timeout | undefined>(undefined);\n  const [state, setState] = useState<readonly Message[]>([]);\n\n  useEffect(() => {\n    intervalRef.current = setInterval(() => {\n      fetch(\"/list\")\n        .then((response) => response.json())\n        .then(setState);\n    }, 1000);\n    return () => {\n      clearInterval(intervalRef.current!);\n    };\n  }, [setState]);\n\n  return state;\n};\n","import { useCallback } from \"react\";\nimport { Action } from \"../types\";\n\nexport const useSendMessage = () => {\n  return useCallback((id: string, action: Action) => {\n    return fetch(`/${id}/action`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        action: action.id,\n      }),\n    });\n  }, []);\n};\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}